name: CI-CD
on: 
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:

  # test:

  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - name: Use Node.js
  #     uses: actions/setup-node@v2
  #     with: 
  #       node-version: '16.x'

  #   - uses: actions/checkout@v2

  #   - name: Install dependencies
  #     run: npm install
    
  #   - name: lint
  #     run: npm run lint
    
  #   #- name: Unit tests
  #   #  run: npm run test
    
  build: 
    #needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Use Node.js
      uses: actions/setup-node@v2
      with: 
        node-version: '16.x'

    # - uses: actions/checkout@v2

    # - name: Install dependencies
    #   run: npm install
      
    # - name: Build app
    #   run: npm run build --prod
    
    # - name: Upload artifact
    #   uses: actions/upload-artifact@v2
    #   with: 
    #     name: devops-test-${{ github.run_id }}-${{ github.run_number }}
    #     path: ./dist/devops-test

  # deploy: 
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
    # - name: Install SSH Key
    #   uses: shimataro/ssh-key-action@v2
    #   with:
    #     key: ${{ secrets.SSHKEY }} 
    #     known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

    # - name: Adding Known Hosts
    #   run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    # - name: Copy dist with rsync
    #   run: | 
    #     rsync -avz ./dist/deploy-test ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/azureuser/www/
    #     rsync -avz ./server ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/azureuser/www/
    #     pm2 start ./server/server.js
  deploy:
    #needs: [test]
    runs-on: ubuntu-latest


    steps:
    - name: SSH and deploy node app
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSHKEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          ls
          node --version
         # git pull origin master
         # npm install --production
         # pm2 restart node-app
